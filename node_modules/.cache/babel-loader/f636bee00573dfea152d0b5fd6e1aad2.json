{"ast":null,"code":"var _jsxFileName = \"/Users/school/Desktop/Portfolio/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\nimport rootReducer from './redux/reducers'; // imports ./redux/reducers/index.js\n\nimport rootSaga from './redux/sagas'; // imports ./redux/sagas/index.js\n\nimport App from './components/App/App';\nconst sagaMiddleware = createSagaMiddleware(); // this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\n\nconst middlewareList = process.env.NODE_ENV === 'development' ? [sagaMiddleware, logger] : [sagaMiddleware];\nconst store = createStore( // tells the saga middleware to use the rootReducer\n// rootSaga contains all of our other reducers\nrootReducer, // adds all middleware to our project including saga and logger\napplyMiddleware(...middlewareList)); // tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\n\nsagaMiddleware.run(rootSaga);\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }\n})), document.getElementById('react-root'));","map":{"version":3,"sources":["/Users/school/Desktop/Portfolio/src/index.js"],"names":["React","ReactDOM","createStore","applyMiddleware","Provider","createSagaMiddleware","logger","rootReducer","rootSaga","App","sagaMiddleware","middlewareList","process","env","NODE_ENV","store","run","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,WAAP,MAAwB,kBAAxB,C,CAA4C;;AAC5C,OAAOC,QAAP,MAAqB,eAArB,C,CAAsC;;AAEtC,OAAOC,GAAP,MAAgB,sBAAhB;AAEA,MAAMC,cAAc,GAAGL,oBAAoB,EAA3C,C,CAEA;AACA;AACA;;AACA,MAAMM,cAAc,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GACrB,CAACJ,cAAD,EAAiBJ,MAAjB,CADqB,GAErB,CAACI,cAAD,CAFF;AAIA,MAAMK,KAAK,GAAGb,WAAW,EACvB;AACA;AACAK,WAHuB,EAIvB;AACAJ,eAAe,CAAC,GAAGQ,cAAJ,CALQ,CAAzB,C,CAQA;AACA;;AACAD,cAAc,CAACM,GAAf,CAAmBR,QAAnB;AAEAP,QAAQ,CAACgB,MAAT,eACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEG,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAJF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport rootReducer from './redux/reducers'; // imports ./redux/reducers/index.js\nimport rootSaga from './redux/sagas'; // imports ./redux/sagas/index.js\n\nimport App from './components/App/App';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"]},"metadata":{},"sourceType":"module"}